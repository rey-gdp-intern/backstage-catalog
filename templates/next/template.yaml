apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: next-template
  title: Next Template
  description: Template for simple Next.js service
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - name
        - projectId
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
        projectId:
          title: GCP Project ID
          type: string
          description: Your Google Cloud Project ID
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

        - id: create-gcb-trigger
      name: Create GCB Trigger
      action: http:backstage:request 
      input:
        method: 'POST'
        path: '/proxy/gcb/v1/projects/${{ parameters.projectId }}/triggers'
        headers:
          Content-Type: 'application/json'
        body:
          name: '${{ parameters.name }}-trigger'
          description: 'Automatically created trigger from Backstage template'
          github:
            name: '${{ parameters.repoUrl.split('/').pop().replace(".git", "") }}'
            owner: '${{ parameters.repoUrl.split("/")[3] }}'
            push:
              branch: 'main'
          # build:
          #   steps:
          #     - name: 'gcr.io/cloud-builders/docker'
          #       id: Build
          #       args:
          #         - 'build'
          #         - '-t'
          #         - '${_REGISTRY_URL}/${_PROJECT}/${_MODULE}:${SHORT_SHA}'
          #         - '.'
          #     - name: 'gcr.io/cloud-builders/docker'
          #       id: Push
          #       args:
          #         - 'push'
          #         - '${_REGISTRY_URL}/${_PROJECT}/${_MODULE}:${SHORT_SHA}'
          #       waitFor:
          #         - "Build"
          #     - name: 'gcr.io/cloud-builders/gcloud'
          #       id: Deploy
          #       entrypoint: 'bash'
          #       args:
          #         - '-c'
          #         - |
          #             PROJECT=$$(gcloud config get-value core/project)          
          #             gke-gcloud-auth-plugin --version
          #             export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          #             gcloud container clusters get-credentials "${_CLUSTER}" --project "${_PROJECT}"  --zone "${_ZONE}"  
          #             kubectl apply -f /k8s/production.yml.yaml
          #       waitFor:
          #         - "Push"
          #   substitutions:
          #     _REGISTRY_URL: 'docker.io/reyshazni'
          #     _PROJECT: 'intern-infra'
          #     _CLUSTER: 'sandbox'
          #     _ZONE: 'asia-southeast2-a'


    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
