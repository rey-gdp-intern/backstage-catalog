steps:
  - id: docker-login
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker login --username=$$USERNAME --password=$$PASSWORD']
    secretEnv: ['USERNAME', 'PASSWORD']

  - id: docker-build
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker build -t $$USERNAME/${_IMAGE_NAME}:${SHORT_SHA} .']
    secretEnv: ['USERNAME']
    waitFor:
      - "docker-login"
    
  steps:
  - id: docker-push
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          echo "Logging into Docker..."
          docker login --username=$$USERNAME --password=$$PASSWORD
          if [ $? -ne 0 ]; then
            echo "Docker login failed"
            exit 1
          fi
          echo "Docker login successful"
          echo "Pushing Docker image..."
          docker push $$USERNAME/${_IMAGE_NAME}:${SHORT_SHA}
          if [ $? -ne 0 ]; then
            echo "Docker push failed"
            exit 1
          fi
          echo "Docker push successful"
    secretEnv: ['USERNAME', 'PASSWORD']
    waitFor:
      - "docker-build"


  - name: 'gcr.io/cloud-builders/gcloud'
    id: gke-deploy
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          PROJECT=$$(gcloud config get-value core/project)
          gke-gcloud-auth-plugin --version
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          gcloud container clusters get-credentials "${_CLUSTER}" --project "${_PROJECT}" --zone "${_ZONE}"
          sed -i 's|<PROJECT_NAME>|${_PROJECT}|g' /k8s/production.yml
          sed -i 's|<VERSION>|${SHORT_SHA}|g' /k8s/production.yml
          sed -i 's|<IMAGE_NAME>|${_IMAGE_NAME}:${SHORT_SHA}|g' /k8s/production.yml
          sed -i 's|<PORT>|${_PORT}|g' /k8s/production.yml
          kubectl apply -f /k8s/production.yml
    waitFor:
      - "docker-push"

substitutions:
  _REGISTRY_URL: docker.io/reyshazni
  _PROJECT: intern-infra
  _CLUSTER: sandbox
  _ZONE: asia-southeast2-a
  _IMAGE_NAME: '${_PROJECT}-$REPO_NAME-${BRANCH_NAME}'
  _PORT: '8080'

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/GCB_DOCKER_PASSWORD/versions/latest
    env: 'PASSWORD'
  - versionName: projects/$PROJECT_ID/secrets/GCB_DOCKER_USERNAME/versions/latest
    env: 'USERNAME'