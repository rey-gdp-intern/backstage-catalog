name: Next CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
      - staging
      - develop
      - develop_*
  pull_request:
    branches:
      - master
      - main
      - staging
      - develop
      - develop_*
    types: [closed]

env:
  PORT: 3000
  REGISTRY_REPO: antrein
  BRANCH: ${{ contains(github.ref_name, 'develop_') && 'develop' || (github.ref_name == 'develop' && 'develop' || (github.ref_name == 'staging' && 'staging' || 'production')) }}

jobs:
  setup-environment:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set-env.outputs.IMAGE_TAG }}
      IMAGE_NAME: ${{ steps.set-env.outputs.IMAGE_NAME }}
      SHORT_SHA: ${{ steps.set-env.outputs.SHORT_SHA }}
      PROJECT_NAME: ${{ steps.set-env.outputs.PROJECT_NAME }}
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          if [[ "${{ github.ref_name }}" == develop_* ]]; then
            SUFFIX=$(echo "${{ github.ref_name }}" | sed 's|^develop_||')
            PROJECT_NAME="${{ github.event.repository.name }}_$SUFFIX"
            IMAGE_TAG="${{ env.BRANCH }}_$SUFFIX:$SHORT_SHA"
            IMAGE_NAME="reyshazni/${{ github.event.repository.name }}-$IMAGE_TAG"
          elif [[ "${{ github.ref_name }}" == "develop" ]]; then
            PROJECT_NAME="${{ github.event.repository.name }}"
            IMAGE_TAG="${{ env.BRANCH }}:$SHORT_SHA"
            IMAGE_NAME="reyshazni/${{ github.event.repository.name }}-$IMAGE_TAG"
          else
            PROJECT_NAME="${{ github.event.repository.name }}"
            BRANCH="${{ github.ref_name == 'refs/heads/staging' && 'staging' || 'production' }}"
            IMAGE_TAG="${{ env.BRANCH }}:$SHORT_SHA"
            IMAGE_NAME="reyshazni/${{ github.event.repository.name }}-$IMAGE_TAG"
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "BRANCH=$BRANCH" >> $GITHUB_OUTPUT

  dockerize-and-push:
    needs: setup-environment
    environment: ${{ needs.setup-environment.outputs.BRANCH }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Login Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker Image
        env: 
          IMAGE_NAME: ${{ needs.setup-environment.outputs.IMAGE_NAME }}
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

  deploy-to-server-gcp:
    needs: [setup-environment, dockerize-and-push]
    runs-on: ubuntu-latest
    environment: ${{ needs.setup-environment.outputs.BRANCH }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Prepare deployment file
        env: 
          IMAGE_NAME: ${{ needs.setup-environment.outputs.IMAGE_NAME }}
          SHORT_SHA: ${{ needs.setup-environment.outputs.SHORT_SHA }}
          PROJECT_NAME: ${{ needs.setup-environment.outputs.PROJECT_NAME }}
        run: |
          sed -i "s|<PROJECT_NAME>|${{ env.PROJECT_NAME }}|g" k8s/${{ env.BRANCH }}.yml
          sed -i "s|<IMAGE_NAME>|${{ env.IMAGE_NAME }}|g" k8s/${{ env.BRANCH }}.yml
          sed -i "s|<VERSION>|${{ env.SHORT_SHA }}|g" k8s/${{ env.BRANCH }}.yml
          sed -i "s|<PORT>|${{ env.PORT }}|g" k8s/${{ env.BRANCH }}.yml
          cat k8s/${{ env.BRANCH }}.yml

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ vars.GCP_SA_KEY }}

      - name: Connect to cluster
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ vars.GCP_CLUSTER_NAME }}
          location: ${{ vars.GCP_ZONE }}

      - name: Deploy
        run: |
          kubectl apply -f k8s/${{ env.BRANCH }}.yml
