steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: DockerLogin
    entrypoint: 'bash'
    args: ['-c', 'docker login --username=$$USERNAME --password=$$PASSWORD']
    secretEnv: ['USERNAME', 'PASSWORD']

  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
    - 'build'
    - '-t'
    - '${_IMAGE_NAME}:${SHORT_SHA}'
    - '.'
    waitFor:
      - "DockerLogin"

  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
    - 'push'
    - '${_IMAGE_NAME}:${SHORT_SHA}'
    waitFor:
      - "Build"

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Deploy
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          PROJECT=$$(gcloud config get-value core/project)
          gke-gcloud-auth-plugin --version
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          gcloud container clusters get-credentials "${_CLUSTER}" --project "${_PROJECT}" --zone "${_ZONE}"
          sed -i 's|<PROJECT_NAME>|${_PROJECT}|g' /k8s/production.yml
          sed -i 's|<VERSION>|${SHORT_SHA}|g' /k8s/production.yml
          sed -i 's|<IMAGE_NAME>|${_IMAGE_NAME}:${SHORT_SHA}|g' /k8s/production.yml
          sed -i 's|<PORT>|${_PORT}|g' /k8s/production.yml
          kubectl apply -f /k8s/production.yml
    waitFor:
      - "Push"

substitutions:
  _REGISTRY_URL: docker.io/reyshazni
  _PROJECT: intern-infra
  _CLUSTER: sandbox
  _ZONE: asia-southeast2-a
  _IMAGE_NAME: '${_REGISTRY_URL}/${_PROJECT}-${_REPO_NAME}-${BRANCH_NAME}'
  _PORT: '8080'

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/GCB_DOCKER_PASSWORD/versions/latest
    env: 'PASSWORD'
  - versionName: projects/$PROJECT_ID/secrets/GCB_DOCKER_USERNAME/versions/latest
    env: 'USERNAME'
