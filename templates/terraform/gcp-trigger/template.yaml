apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gcp-trigger
  title: GCP Trigger
  description: Template to create GCP Cloud Build triggers using Terraform
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Trigger Parameters
      required:
        - triggerName
        - projectId
        - repoName
        - repoOwner
        - branchName
        - repoUrl
      properties:
        triggerName:
          title: Trigger Name
          type: string
          description: Name of the Cloud Build trigger new
        projectId:
          title: GCP Project ID
          type: string
          description: Select your Google Cloud Project ID
          enum:
            - intern-infra
        repoName:
          title: Repository Name
          type: string
          description: Name of the repository
        repoOwner:
          title: Repository Owner
          type: string
          description: Select the repository owner
          enum:
            - rey-gdp-intern
        branchName:
          title: Branch Name
          type: string
          description: Select the branch name to trigger the build
          enum:
            - main
        repoUrl:
          title: Repository URL
          type: string
          description: URL of the repository where the template will be published
          default: 'github.com'

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          trigger_name: ${{ parameters.triggerName }}
          project_id: ${{ parameters.projectId }}
          repo_name: ${{ parameters.repoName }}
          repo_owner: ${{ parameters.repoOwner }}
          branch_name: ${{ parameters.branchName }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        repoUrl: ${{ parameters.repoUrl }}
        description: 'Repo for GCP trigger'
        defaultBranch: main
        files:
          - src: ./content/
            dest: /

    - id: github-action
      name: Trigger GitHub Actions
      action: github:actions:dispatch
      input:
        workflowId: terraform.yml
        repoUrl: ${{ parameters.repoUrl }}
        branchOrTag: main
        inputs:
          trigger_name: ${{ parameters.triggerName }}
          project_id: ${{ parameters.projectId }}
          repo_name: ${{ parameters.repoName }}
          repo_owner: ${{ parameters.repoOwner }}
          branch_name: ${{ parameters.branchName }}

    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
